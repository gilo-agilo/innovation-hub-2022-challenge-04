AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application that uses the ASP.NET Core framework running in Amazon Lambda.
Parameters: {}
Conditions: {}
Resources:
  AspNetCoreFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: OpenSearchServerless::OpenSearchServerless.LambdaEntryPoint::FunctionHandlerAsync
      Runtime: dotnet6
      CodeUri: ''
      MemorySize: 256
      Timeout: 30
      Role: null
      Policies:
        - AWSLambda_FullAccess
      Events:
        ProxyResource:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
        RootResource:
          Type: Api
          Properties:
            Path: /
            Method: ANY
  S3FileUploadTrigger:
    Type: AWS::Serverless::Function
    Properties:
      Handler: OpenSearchServerless::OpenSearchServerless.Triggers.S3Trigger::FunctionHandler
      Runtime: dotnet6
      CodeUri: ''
      MemorySize: 256
      Timeout: 30
      Role: null
      Policies:
        - AWSLambda_FullAccess
      Events:
        FileUploaded:
          Type: S3
          Properties:
            Bucket: !Ref SrcBucket
            Events: s3:ObjectCreated:*
  SrcBucket:
    Type: AWS::S3::Bucket
    BucketName: opensearchserverless-sourcebucket
  ElasticSearchDeliveryStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: "kinesis-opensearch-testindex2-stream"
      DeliveryStreamType: "DirectPut"
      AmazonopensearchserviceDestinationConfiguration:
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 50
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: "deliverystream"
          LogStreamName: "elasticsearchDelivery"
        DomainARN: "arn:aws:es:eu-west-1:439223726434:domain/testdomain-kinesis"
        IndexName: "testindex2"
        IndexRotationPeriod: "NoRotation"
        RetryOptions:
          DurationInSeconds: "60"
        RoleARN: "arn:aws:iam::439223726434:role/service-role/KinesisFirehoseServiceRole-kinesis-opens-eu-west-1-1651319750612"
        S3BackupMode: "AllDocuments"
        S3Configuration:
          BucketARN: "arn:aws:s3:::opensearchserverless-kinesis-backup"
          RoleARN: "arn:aws:iam::439223726434:role/service-role/KinesisFirehoseServiceRole-kinesis-opens-eu-west-1-1651319750612"
          BufferingHints:
            IntervalInSeconds: "60"
            SizeInMBs: "50"
          CompressionFormat: "UNCOMPRESSED"
          Prefix: "firehose/"
          CloudWatchLoggingOptions:
            Enabled: true
            LogGroupName: "deliverystream"
            LogStreamName: "s3Backup"
Outputs:
  ApiURL:
    Description: API endpoint URL for Prod environment
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/'